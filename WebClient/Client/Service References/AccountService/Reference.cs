//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18449
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.AccountService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Account", Namespace="http://schemas.datacontract.org/2004/07/AccountService")]
    [System.SerializableAttribute()]
    public partial class Account : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal balanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isLoggedinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] mutationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int numberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string passwordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string residenceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal balance {
            get {
                return this.balanceField;
            }
            set {
                if ((this.balanceField.Equals(value) != true)) {
                    this.balanceField = value;
                    this.RaisePropertyChanged("balance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isLoggedin {
            get {
                return this.isLoggedinField;
            }
            set {
                if ((this.isLoggedinField.Equals(value) != true)) {
                    this.isLoggedinField = value;
                    this.RaisePropertyChanged("isLoggedin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] mutations {
            get {
                return this.mutationsField;
            }
            set {
                if ((object.ReferenceEquals(this.mutationsField, value) != true)) {
                    this.mutationsField = value;
                    this.RaisePropertyChanged("mutations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int number {
            get {
                return this.numberField;
            }
            set {
                if ((this.numberField.Equals(value) != true)) {
                    this.numberField = value;
                    this.RaisePropertyChanged("number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                if ((object.ReferenceEquals(this.passwordField, value) != true)) {
                    this.passwordField = value;
                    this.RaisePropertyChanged("password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string residence {
            get {
                return this.residenceField;
            }
            set {
                if ((object.ReferenceEquals(this.residenceField, value) != true)) {
                    this.residenceField = value;
                    this.RaisePropertyChanged("residence");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AccountService.IAccountService")]
    public interface IAccountService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/Login", ReplyAction="http://tempuri.org/IAccountService/LoginResponse")]
        Client.AccountService.Account Login(int Number, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/Login", ReplyAction="http://tempuri.org/IAccountService/LoginResponse")]
        System.Threading.Tasks.Task<Client.AccountService.Account> LoginAsync(int Number, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/Register", ReplyAction="http://tempuri.org/IAccountService/RegisterResponse")]
        void Register(Client.AccountService.Account Account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/Register", ReplyAction="http://tempuri.org/IAccountService/RegisterResponse")]
        System.Threading.Tasks.Task RegisterAsync(Client.AccountService.Account Account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GenerateAccountNumber", ReplyAction="http://tempuri.org/IAccountService/GenerateAccountNumberResponse")]
        int GenerateAccountNumber();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GenerateAccountNumber", ReplyAction="http://tempuri.org/IAccountService/GenerateAccountNumberResponse")]
        System.Threading.Tasks.Task<int> GenerateAccountNumberAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/Transfer", ReplyAction="http://tempuri.org/IAccountService/TransferResponse")]
        void Transfer(Client.AccountService.Account sender, int receiver, decimal amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/Transfer", ReplyAction="http://tempuri.org/IAccountService/TransferResponse")]
        System.Threading.Tasks.Task TransferAsync(Client.AccountService.Account sender, int receiver, decimal amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/getAccount", ReplyAction="http://tempuri.org/IAccountService/getAccountResponse")]
        Client.AccountService.Account getAccount(int number);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/getAccount", ReplyAction="http://tempuri.org/IAccountService/getAccountResponse")]
        System.Threading.Tasks.Task<Client.AccountService.Account> getAccountAsync(int number);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetBalance", ReplyAction="http://tempuri.org/IAccountService/GetBalanceResponse")]
        decimal GetBalance(int number);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetBalance", ReplyAction="http://tempuri.org/IAccountService/GetBalanceResponse")]
        System.Threading.Tasks.Task<decimal> GetBalanceAsync(int number);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetMutations", ReplyAction="http://tempuri.org/IAccountService/GetMutationsResponse")]
        string[] GetMutations(int number);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetMutations", ReplyAction="http://tempuri.org/IAccountService/GetMutationsResponse")]
        System.Threading.Tasks.Task<string[]> GetMutationsAsync(int number);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAccountServiceChannel : Client.AccountService.IAccountService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AccountServiceClient : System.ServiceModel.ClientBase<Client.AccountService.IAccountService>, Client.AccountService.IAccountService {
        
        public AccountServiceClient() {
        }
        
        public AccountServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AccountServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Client.AccountService.Account Login(int Number, string Password) {
            return base.Channel.Login(Number, Password);
        }
        
        public System.Threading.Tasks.Task<Client.AccountService.Account> LoginAsync(int Number, string Password) {
            return base.Channel.LoginAsync(Number, Password);
        }
        
        public void Register(Client.AccountService.Account Account) {
            base.Channel.Register(Account);
        }
        
        public System.Threading.Tasks.Task RegisterAsync(Client.AccountService.Account Account) {
            return base.Channel.RegisterAsync(Account);
        }
        
        public int GenerateAccountNumber() {
            return base.Channel.GenerateAccountNumber();
        }
        
        public System.Threading.Tasks.Task<int> GenerateAccountNumberAsync() {
            return base.Channel.GenerateAccountNumberAsync();
        }
        
        public void Transfer(Client.AccountService.Account sender, int receiver, decimal amount) {
            base.Channel.Transfer(sender, receiver, amount);
        }
        
        public System.Threading.Tasks.Task TransferAsync(Client.AccountService.Account sender, int receiver, decimal amount) {
            return base.Channel.TransferAsync(sender, receiver, amount);
        }
        
        public Client.AccountService.Account getAccount(int number) {
            return base.Channel.getAccount(number);
        }
        
        public System.Threading.Tasks.Task<Client.AccountService.Account> getAccountAsync(int number) {
            return base.Channel.getAccountAsync(number);
        }
        
        public decimal GetBalance(int number) {
            return base.Channel.GetBalance(number);
        }
        
        public System.Threading.Tasks.Task<decimal> GetBalanceAsync(int number) {
            return base.Channel.GetBalanceAsync(number);
        }
        
        public string[] GetMutations(int number) {
            return base.Channel.GetMutations(number);
        }
        
        public System.Threading.Tasks.Task<string[]> GetMutationsAsync(int number) {
            return base.Channel.GetMutationsAsync(number);
        }
    }
}
